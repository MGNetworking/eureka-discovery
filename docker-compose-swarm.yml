version: '3.9'

services:
  ms-eureka:
    image: sonatype-nexus.backhole.ovh/ms-eureka-service:${IMAGE_VERSION:-latest}
    env_file:
      - .env
    deploy:
      replicas: 1
#      resources:
#        limits: # spécifie les limites de ressources pour le service
#          cpus: '0.5'   # limite maximale (CPU) '0.5' signifierait 50% d'utilisation maximale du CPU
#          memory: 512M  # limite maximale de la mémoire RAM
      labels:
        - "lb.service=ms-eureka-service"
      update_config: #  Configure la stratégie de mise à jour.
        parallelism: 1            # Nombre de tâches mises à jour simultanément.
        delay: 10s                # Délai entre chaque mise à jour.
        order: start-first        # Ordre dans lequel les mises à jour sont effectuées
        failure_action: rollback  # Action à prendre en cas d'échec de mise à jour (pause, continue, rollback)
        monitor: 30s              # Délai pendant lequel Docker attend la mise à jour avant de la considérer comme réussie.
        max_failure_ratio: 0.3    # Taux maximal d'échec avant l'arrêt de la mise à jour.
      rollback_config: # Configure la stratégie de retour en arrière en cas d'échec de mise à jour.
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: continue
        monitor: 30s
        max_failure_ratio: 0.3
    healthcheck:
      test: [ "CMD-SHELL", "/app/healthcheck.sh" ]
      interval: 30s       # Définit le temps entre les contrôles de santé
      timeout: 30s        # le délai d'attente pour les commandes de contrôle de santé
      retries: 5          # Cette option vous permet d'exiger plusieurs échecs successifs avant qu'un conteneur ne soit marqué comme étant en mauvaise santé
      start_period: 180s  # Définit la durée après le démarrage d'un conteneur pendant laquelle les contrôles de santé doivent être ignorés
    ports:
      - "8099:8099"
    networks:
      - api

networks:
  api:
    external: true
    name: spring-api